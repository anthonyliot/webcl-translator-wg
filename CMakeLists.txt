CMAKE_MINIMUM_REQUIRED(VERSION 3.8.0 FATAL_ERROR)

INCLUDE(${CMAKE_CURRENT_LIST_DIR}/cmake/WebCLTranslatorFunctions.cmake)
INCLUDE(${CMAKE_CURRENT_LIST_DIR}/cmake/WebCLTranslatorEnvironment.cmake)
INCLUDE(${CMAKE_CURRENT_LIST_DIR}/cmake/WebCLTranslatorVersion.cmake)

# Use to get same syntax for printing version information
INCLUDE(${CMAKE_CURRENT_LIST_DIR}/cmake/EmscriptenVersion.cmake)

# change version also in configure.ac
PROJECT(WebCLTranslatorWG LANGUAGES C CXX)
INCLUDE(CheckLanguage)
INCLUDE(CTest)

SET(CMAKE_CXX_EXTENSIONS ON)
SET(CMAKE_CXX_STANDARD 11)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)

SET(CMAKE_C_EXTENSIONS ON)
SET(CMAKE_C_STANDARD 11)
SET(CMAKE_C_STANDARD_REQUIRED ON)

SET(CMAKE_POSITION_INDEPENDENT_CODE ON)

IF (EMSCRIPTEN)
    # check support for OpenCL 1.2
    FIND_PACKAGE(OpenCL 1.2 EXACT REQUIRED)

    IF (OpenCL_FOUND)
        SET(OpenCL_INCLUDE_DIR ${OPENCL_INCLUDE_DIR})
        SET(OpenCL_LIBRARY ${OPENCL_LIBRARY})
        MESSAGE(
            STATUS
                "OpenCL Found: Include: ${OpenCL_INCLUDE_DIR} | Lib/Framework: ${OpenCL_LIBRARY}"
        )
    ELSE ()
        MESSAGE(
            FATAL_ERROR
                "OpenCL Not Found - Please ensure the emscripten submodule is installed on the branch enhancement/AL-Support-OpenCL"
        )
    ENDIF ()

    SET(CMAKE_EXE_LINKER_FLAGS_DEBUG
        " -s DISABLE_EXCEPTION_THROWING=0 -s VERBOSE -s ASSERTIONS=2 -s SAFE_HEAP=1 -s STACK_OVERFLOW_CHECK=1 -s DEMANGLE_SUPPORT=1 -s GL_ASSERTIONS=1 -O0 -s CL_PRINT_TRACE=1 -s CL_DEBUG=1 -s CL_GRAB_TRACE=1 -s CL_CHECK_VALID_OBJECT=1 -s CL_CHECK_SET_POINTER=1"
    )
    SET(CMAKE_EXE_LINKER_FLAGS_RELEASE
        " -s ASSERTIONS=0 -s SAFE_HEAP=0 -s STACK_OVERFLOW_CHECK=0 -s DEMANGLE_SUPPORT=0 -s GL_ASSERTIONS=0 -O3 -s CL_PRINT_TRACE=0 -s CL_DEBUG=0 -s CL_GRAB_TRACE=0 -s CL_CHECK_VALID_OBJECT=0 -s CL_CHECK_SET_POINTER=0"
    )
ELSE ()
    INCLUDE(${CMAKE_CURRENT_LIST_DIR}/cmake/GoogleBenchmark.cmake)
    INCLUDE(${CMAKE_CURRENT_LIST_DIR}/cmake/GoogleTest.cmake)

    INCLUDE(GoogleTest)
    ADD_SUBDIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/externs/clwrapper)
ENDIF ()

ADD_SUBDIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/sources)
