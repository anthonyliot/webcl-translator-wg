INCLUDE_GUARD(GLOBAL)

FIND_PACKAGE(Git REQUIRED QUIET)

SET(EMSCRIPTEN_ROOT ${WEBCLTRANSLATOR_ROOT}/externs/emscripten)

EXECUTE_PROCESS(
    COMMAND git rev-parse HEAD
    OUTPUT_VARIABLE EMSCRIPTEN_GIT_SHA_LONG
    WORKING_DIRECTORY ${EMSCRIPTEN_ROOT}
    OUTPUT_STRIP_TRAILING_WHITESPACE)

STRING(SUBSTRING ${EMSCRIPTEN_GIT_SHA_LONG} 0 8 EMSCRIPTEN_GIT_SHA)

EXECUTE_PROCESS(
    COMMAND git rev-parse --abbrev-ref HEAD
    OUTPUT_VARIABLE EMSCRIPTEN_BRANCH_NAME
    WORKING_DIRECTORY ${EMSCRIPTEN_ROOT}
    OUTPUT_STRIP_TRAILING_WHITESPACE)

EXECUTE_PROCESS(
    COMMAND git rev-list --count HEAD
    OUTPUT_VARIABLE EMSCRIPTEN_INCR
    WORKING_DIRECTORY ${EMSCRIPTEN_ROOT}
    OUTPUT_STRIP_TRAILING_WHITESPACE)

WEBCLTRANSLATOR_NUMBER_TO_HEX(NUMBER ${EMSCRIPTEN_INCR} OUTPUT_VARIABLE
                              EMSCRIPTEN_HEX)
SET(EMSCRIPTEN_HEX "0x${EMSCRIPTEN_HEX}")
STRING(TIMESTAMP EMSCRIPTEN_TIME "%Y%m%d")

MESSAGE(STATUS "Emscripten Version:")
WEBCLTRANSLATOR_DICT(SET EMSCRIPTEN_VERSION sha ${EMSCRIPTEN_GIT_SHA_LONG})
WEBCLTRANSLATOR_DICT(SET EMSCRIPTEN_VERSION sha8 ${EMSCRIPTEN_GIT_SHA})
WEBCLTRANSLATOR_DICT(SET EMSCRIPTEN_VERSION branch ${EMSCRIPTEN_BRANCH_NAME})
WEBCLTRANSLATOR_DICT(SET EMSCRIPTEN_VERSION incr ${EMSCRIPTEN_INCR})
WEBCLTRANSLATOR_DICT(SET EMSCRIPTEN_VERSION hex ${EMSCRIPTEN_HEX})
WEBCLTRANSLATOR_DICT(SET EMSCRIPTEN_VERSION time ${EMSCRIPTEN_TIME})
WEBCLTRANSLATOR_DICT(
    SET EMSCRIPTEN_VERSION version
    ${EMSCRIPTEN_INCR}.${EMSCRIPTEN_TIME}.${EMSCRIPTEN_GIT_SHA})
WEBCLTRANSLATOR_DICT(PRETTY_PRINT EMSCRIPTEN_VERSION)

UNSET(EMSCRIPTEN_GIT_SHA_LONG)
UNSET(EMSCRIPTEN_GIT_SHA)
UNSET(EMSCRIPTEN_BRANCH_NAME)
UNSET(EMSCRIPTEN_INCR)
UNSET(EMSCRIPTEN_HEX)
UNSET(EMSCRIPTEN_TIME)
